;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;                            Variables                              ;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defvar _IMAGE "images/profile.jpg")
(defvar _NAME "Alex Kristiansen")
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;                         Poll variables                            ;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defpoll _UNAME :interval "5m" "whoami")
(defpoll _HOST :interval "5s" "hostname")
(defpoll _CPU_USAGE :interval "1s" "sh ~/.config/eww/scripts/sys_info --cpu")
(defpoll _MEM_USAGE :interval "1s" "sh ~/.config/eww/scripts/sys_info --mem")
(defpoll _BLIGHT :interval "1s" "sh ~/.config/eww/scripts/sys_info --blight")
(defpoll _BATTERY :interval "1s" "sh ~/.config/eww/scripts/sys_info --bat")
(defpoll _HOUR :interval "10s" "date '+%I'")
(defpoll _MIN :interval "10s" "date '+%M'")
(defpoll _MER :interval "10s" "date '+%P'")
(defpoll _DAY :interval "10s" "date '+%A'")
(defpoll _UPHOUR :interval "5s" "uptime -p | awk '{print $2 \" \" $3}' | sed 's/,//g'")
(defpoll _UPMIN :interval "5s" "uptime -p | awk '{print $4 \" \" $5}'")
(defpoll _SONG :interval "1s" "sh ~/.config/eww/scripts/music_info --song")
(defpoll _ARTIST :interval "1s" "sh ~/.config/eww/scripts/music_info --artist")
(defpoll _STATUS :interval "1s" "sh ~/.config/eww/scripts/music_info --status")
(defpoll _CURRENT :interval "1s" "sh ~/.config/eww/scripts/music_info --time")
(defpoll _COVER :interval "1s" "sh ~/.config/eww/scripts/music_info --cover")
(defpoll _CTIME :interval "1s" "sh ~/.config/eww/scripts/music_info --ctime")
(defpoll _TTIME :interval "1s" "sh ~/.config/eww/scripts/music_info --ttime")
(defpoll _ICON :interval "15m" "")
(defpoll _STAT :interval "15m" "")
(defpoll _TEMP :interval "15m" "")
(defpoll _HEX :interval "15m" "")
(defpoll _QUOTE :interval "15m" "")
(defpoll _QUOTE2 :interval "15m" "")
(defpoll _MAILS :interval "5m" "")
(defpoll _FREE :interval "5m" "df -h / | awk '{print $4}' | tail -n 1 | sed 's/G/GB/'")

(defwidget user[]
    (box
        :class "genwin"
        :orientation "v"
        :spacing "35"
        :space-evenly "false"
        :vexpand "false"
        :hexpand "false"
        (box
            :class "face"
            :halign "center")
        (label
            :class "fullname"
            :halign "center"
            :wrap "true"
            :limit-width "25"
            :text _NAME)
        (label
            :class "username"
            :halign "center"
            :wrap "true"
            :limit-width "25"
            :text "@${_UNAME}")))

(defwindow profile
    :class "widget"
    :geometry (
        geometry
            :x "150px"
            :y "150px"
            :width "350px"
            :height "440px"
            :anchor "top left"
    )
    (user)
)

(defwidget system[]
    (box
        :class "genwin"
        :vexpand "false"
        :hexpand "false"
        (box
            :orientation "v"
            :spacing "35"
            :halign "center"
            :valign "center"
            :space-evenly "false"
            :vexpand "false"
            :hexpand "false"
            (scaler
                :bcls "cpu_bar"
                :cls "iconcpu"
                :txt "CPU"
                :val _CPU_USAGE)
            (scaler
                :bcls "mem_bar"
                :cls "iconmem"
                :txt "MEM"
                :val _MEM_USAGE)
        )
    )
)

(defwindow system
    :class "widget"
    :geometry (
        geometry
            :x "150px"
            :y "605px"
            :width "350px"
            :height "325px"
            :anchor "top left"
    )
    (system)
)

(defwidget scaler[ bcls cls txt val ]
    (box
        :orientation "h"
        :spacing "20"
        :class bcls
        :space-evenly "false"
        :vexpand "false"
        :hexpand "false"
        (label
            :class cls
            :text txt )
        (scale
            :min "0"
            :max "100"
            :value val )
    )
)

(defwidget clock[]
    (box 
        :class "widget genwin" 
        :orientation "h"
        :space-evenly "false"
        :vexpand "false"
        :hexpand "false"
        (label 
            :class "time_hour" 
            :limit-width "25" 
            :wrap "true" 
            :valign "start" 
            :text _HOUR)
        (label
            :class "time_min"
            :limit-width "25"
            :wrap "true"
            :valign "end"
            :text _MIN)
        (box
            :orientation "v"
            :spacing "25"
            (label
                :class "time_mer"
                :halign "end"
                :wrap "true"
                :limit-width "25"
                :text _MER)
            (label
                :class "time_day"
                :halign "end"
                :wrap "true"
                :limit-width "25"
                :text _DAY) ) ))

(defwindow clock
    :class "widget"
    :geometry (
        geometry
            :x "515px"
            :y "150px"
            :width "350px"
            :height "155px"
            :anchor "top left"
    )
    (clock)
)

(defwidget uptime[]
    (box
        :class "genwin"
        (box
            :orientation "h"
            :halign "center"
            :spacing "40"
            :space-evenly "false"
            :vexpand "false"
            :hexpand "false"
            (label
                :class "icontimer"
                :valign "center"
                :text "祥")
            (box
                :orientation "v"
                :spacing "0"
                :valign "center"
                :space-evenly "false"
                :vexpand "false"
                :hexpand "false"
                (label
                    :class "uphour"
                    :halign "start"
                    :wrap "true"
                    :limit-width "25"
                    :text _UPHOUR)
                (label
                    :class "upmin"
                    :halign "start"
                    :wrap "true"
                    :limit-width "25"
                    :text _UPMIN)
            )
        )
    )
)

(defwindow uptime
    :class "widget"
    :geometry (
        geometry
            :x "515px"
            :y "320px"
            :width "350px"
            :height "155px"
            :anchor "top left"
    )
    (uptime)
)

(defwidget music[]
    (box
        :class "genwin"
        :orientation "h"
        :space-evenly "false"
        :vexpand "false"
        :hexpand "false"
        (box
            :class "album_art"
            :vexpand "false"
            :hexpand "false"
            :style "backgound-image: url('COVER')"
        )
        (box
            :orientation "v"
            :spacing "20"
            :halign "center"
            :space-evenly "false"
            :vexpand "false"
            :hexpand "false"
            (label
                :halign "center"
                :class "song"
                :wrap "true"
                :limit-width "20"
                :text _SONG)
            (label 
                :halign "center"
                :class "artist"
                :wrap "true"
                :limit-width "15"
                :text _ARTIST)
            (box
                :orientation "h"
                :spacing "20"
                :halign "center"
                :space-evenly "true"
                :vexpand "false"
                :hexpand "false"
                )
        )
    )
)

(defwindow music
    :class "widget"
    :geometry (
        geometry
            :x "515px"
            :y "490px"
            :width "610px"
            :height "280px"
            :anchor "top left"
    )
    (music)
)

(defwidget folders[]
    (box 
        :class "genwin"
        :orientation "v"
        (box
            :class "hddbox"
            :orientation "h"
            (box
                (button
                    :class "btn hddicon"
                    :onclick "bash ~/.config/eww/scripts/menu d thunar"
                    "")
            )
            (label
                :class "fs_sep"
                :text "|")
            (box
                (label
                    :class "hdd_label"
                    :wrap true
                    :limit-width "15"
                    :text _FREE
                )
            )
        )
        (folder
            :iconcls "iconfolder1"
            :iconlabel ""
            :labelcls "label_folder1"
            :label "Documents"
            :click "bash ~/.config/eww/scripts/menu d thunar ~/Documents" )
        (folder
            :iconcls "iconfolder2"
            :iconlabel ""
            :labelcls "label_folder2"
            :label "Downloads"
            :click "bash ~/.config/eww/scripts/menu d thunar ~/Downloads" )
        (folder
            :iconcls "iconfolder3"
            :iconlabel ""
            :labelcls "label_folder3"
            :label "Scripts"
            :click "bash ~/.config/eww/scripts/menu d thunar ~/scripts" )
        (folder
            :iconcls "iconfolder4"
            :iconlabel ""            
            :labelcls "label_folder4"
            :label "~/.config"
            :click "bash ~/.config/eww/scripts/menu d thunar ~/.config" )
    )
)

(defwidget folder[ iconcls iconlabel labelcls label click ]
    (box
        :orientation "h"
        (button
            :class "btn"
            :onclick click
            (box
                :orientation "h"
                (label
                    :class iconcls
                    :wrap "true"
                    :text iconlabel)
                (label
                    :class labelcls
                    :wrap "true"
                    :text label) ))
    )
)


(defwindow folders
    :class "widget"
    :geometry (
        geometry
            :x "1445px"
            :y "490px"
            :width "325px"
            :height "440px"
            :anchor "top left"
    )
    (folders)
)
